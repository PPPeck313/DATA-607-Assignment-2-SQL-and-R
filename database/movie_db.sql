-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.critic
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 0 MINVALUE 0 MAXVALUE 2147483647 CACHE 1 ),
    first_name character varying(20) NOT NULL,
    last_name character varying(20) NOT NULL,
    birthday date,
    occupation_id smallint,
    experience_id smallint,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.critic_movie
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 0 MINVALUE 0 MAXVALUE 2147483647 CACHE 1 ),
    critic_id integer NOT NULL,
    movie_id integer NOT NULL,
    rating_id integer,
    PRIMARY KEY (critic_id, movie_id)
);

CREATE TABLE IF NOT EXISTS public.director
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 0 MINVALUE 0 MAXVALUE 2147483647 CACHE 1 ),
    first_name character varying(20) NOT NULL,
    last_name character varying(20) NOT NULL,
    birthday date,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.experience
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 0 MINVALUE 0 MAXVALUE 2147483647 CACHE 1 ),
    name character varying(20) NOT NULL,
    description character varying(100),
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.genre
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 0 MINVALUE 0 MAXVALUE 2147483647 CACHE 1 ),
    name character varying(20) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.movie
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 0 MINVALUE 0 MAXVALUE 2147483647 CACHE 1 ),
    title character varying(100) NOT NULL,
    year_released smallint NOT NULL,
    genre_id smallint,
    minutes_runtime smallint NOT NULL,
    budget bigint,
    revenue bigint,
    metacritic_rating_id integer,
    director_id integer,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.occupation
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 0 MINVALUE 0 MAXVALUE 2147483647 CACHE 1 ),
    name character varying(50) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.rating
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 0 MINVALUE 0 MAXVALUE 2147483647 CACHE 1 ),
    num_of_star double precision NOT NULL,
    name character varying(20) NOT NULL,
    PRIMARY KEY (id)
);

ALTER TABLE public.critic
    ADD FOREIGN KEY (experience_id)
    REFERENCES public.experience (id)
    NOT VALID;


ALTER TABLE public.critic
    ADD FOREIGN KEY (occupation_id)
    REFERENCES public.occupation (id)
    NOT VALID;


ALTER TABLE public.critic_movie
    ADD FOREIGN KEY (critic_id)
    REFERENCES public.critic (id)
    NOT VALID;


ALTER TABLE public.critic_movie
    ADD FOREIGN KEY (movie_id)
    REFERENCES public.movie (id)
    NOT VALID;


ALTER TABLE public.critic_movie
    ADD FOREIGN KEY (id)
    REFERENCES public.rating (id)
    NOT VALID;


ALTER TABLE public.movie
    ADD FOREIGN KEY (director_id)
    REFERENCES public.director (id)
    NOT VALID;


ALTER TABLE public.movie
    ADD FOREIGN KEY (genre_id)
    REFERENCES public.genre (id)
    NOT VALID;


ALTER TABLE public.movie
    ADD FOREIGN KEY (metacritic_rating_id)
    REFERENCES public.rating (id)
    NOT VALID;

END;